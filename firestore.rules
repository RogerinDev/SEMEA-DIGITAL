
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdminOfDepartment(department) {
      return request.auth.token.role == 'admin' && request.auth.token.department == department;
    }

    function isSuperAdmin() {
      return request.auth.token.role == 'superAdmin';
    }

    match /service_requests/{requestId} {
      allow read: if request.auth.uid == resource.data.citizenId || isAdminOfDepartment(resource.data.department) || isSuperAdmin();
      allow create: if request.auth != null && request.auth.uid == request.resource.data.citizenId;
      allow update: if isAdminOfDepartment(resource.data.department) || isSuperAdmin();
      allow delete: if false;
    }

    match /incidents/{incidentId} {
       allow read: if (resource.data.isAnonymous == false && request.auth.uid == resource.data.citizenId) || isAdminOfDepartment(resource.data.department) || isSuperAdmin();
       allow create: if request.auth != null && (request.resource.data.isAnonymous == true || request.auth.uid == request.resource.data.citizenId);
       allow update: if isAdminOfDepartment(resource.data.department) || isSuperAdmin();
       allow delete: if false;
    }

    match /lost_found_posts/{postId} {
        allow read: if true;
        allow create: if request.auth != null && request.auth.uid == request.resource.data.citizenId;
        allow update, delete: if (resource.data.citizenId != null && request.auth.uid == resource.data.citizenId) || isSuperAdmin();
    }

    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isSuperAdmin();
    }
  }
}
